openapi: 3.1.0
info:
  title: File Management API
  version: 1.0.0
  description: ファイル管理API（1dayインターン用）

servers:
  - url: http://localhost:3000/api/v1
    description: Development server

paths:
  /files:
    get:
      summary: ファイル一覧取得
      operationId: getFiles
      tags:
        - files
      parameters:
        - name: search
          in: query
          description: ファイル名で検索
          schema:
            type: string
            maxLength: 100
        - name: category
          in: query
          description: カテゴリで絞り込み
          schema:
            $ref: '#/components/schemas/FileCategory'
        - name: page
          in: query
          description: ページ番号
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: 1ページあたりの件数
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileListResponse'
        '400':
          description: 不正なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未認証
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: ファイルアップロード
      operationId: uploadFile
      tags:
        - files
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: アップロードするファイル（最大10MB）
                category:
                  $ref: '#/components/schemas/FileCategory'
                description:
                  type: string
                  maxLength: 500
                  description: ファイルの説明
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
        '400':
          description: 不正なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未認証
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: ファイルサイズ超過
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /files/{fileId}:
    delete:
      summary: ファイル削除
      operationId: deleteFile
      tags:
        - files
      parameters:
        - name: fileId
          in: path
          required: true
          description: ファイルID
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
      responses:
        '204':
          description: 削除成功
        '401':
          description: 未認証
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ファイルが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /files/{fileId}/download:
    get:
      summary: ファイルダウンロード
      operationId: downloadFile
      tags:
        - files
      parameters:
        - name: fileId
          in: path
          required: true
          description: ファイルID
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
      responses:
        '200':
          description: ダウンロード成功
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: 未認証
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ファイルが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    FileCategory:
      type: string
      enum:
        - proposal # 提案書
        - contract # 契約書
        - report # レポート
        - other # その他
      description: ファイルカテゴリ

    FileInfo:
      type: object
      required:
        - id
        - name
        - size
        - category
        - mimeType
        - uploadedAt
        - downloadUrl
      properties:
        id:
          type: string
          description: ファイルID
          example: 'file_abc123'
        name:
          type: string
          description: ファイル名
          minLength: 1
          maxLength: 255
          example: '提案書_2024.pdf'
        size:
          type: integer
          description: ファイルサイズ（バイト）
          minimum: 0
          example: 2048576
        category:
          $ref: '#/components/schemas/FileCategory'
        mimeType:
          type: string
          description: MIMEタイプ
          example: 'application/pdf'
        description:
          type: string
          description: ファイルの説明
          maxLength: 500
          example: '2024年度の新規プロジェクト提案書'
        uploadedAt:
          type: string
          format: date-time
          description: アップロード日時
          example: '2024-10-16T10:30:00Z'
        downloadUrl:
          type: string
          format: uri
          description: ダウンロードURL
          example: '/api/v1/files/file_abc123/download'

    FileListResponse:
      type: object
      required:
        - files
        - total
        - page
        - limit
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
          description: ファイル一覧
        total:
          type: integer
          description: 総件数
          minimum: 0
          example: 42
        page:
          type: integer
          description: 現在のページ番号
          minimum: 1
          example: 1
        limit:
          type: integer
          description: 1ページあたりの件数
          minimum: 1
          example: 20

    FileResponse:
      type: object
      required:
        - file
      properties:
        file:
          $ref: '#/components/schemas/FileInfo'

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: エラーメッセージ
          example: 'ファイルが見つかりません'
        code:
          type: string
          description: エラーコード
          example: 'FILE_NOT_FOUND'
